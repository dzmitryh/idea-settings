<templateSet group="other">
  <template name="meth" value="public void $METHOD_NAME() {&#10;}" description="Method Template" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="opt" value="Optional.ofNullable($VAR$).ifPresent($EXPR$)" description="Inserts Optional from &quot;nullable&quot;" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="utility" value="private $className$() {&#10;}$END$" description="Creates utility class constructor" toReformat="false" toShortenFQNames="true">
    <variable name="className" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="const" value="private final $parameterType$ $parameterName$;&#10;&#10;public $constructorClass$(@javax.annotation.Nonnull $parameterType$ $parameterName$$parameterNameSuffix$){&#10;    this.$parameterName$ = $parameterName$$parameterNameSuffix$;&#10;}" description="Create constructor with notNull fields" toReformat="true" toShortenFQNames="true">
    <variable name="parameterType" expression="completeSmart()" defaultValue="" alwaysStopAt="false" />
    <variable name="parameterName" expression="suggestVariableName()" defaultValue="" alwaysStopAt="false" />
    <variable name="constructorClass" expression="className()" defaultValue="" alwaysStopAt="false" />
    <variable name="parameterNameSuffix" expression="camelCase(String)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="COMPLETION" value="true" />
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="notnull" value="java.util.Objects.requireNonNull($parameterName$, &quot;$parameterName$&quot;)" description="Check that var is not null" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="parameterName" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="COMPLETION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="test" value="@org.junit.jupiter.api.Test&#10;void $name$() {&#10;    // given&#10;    $END$&#10;    // when&#10;    // then&#10;}" description="Create a junit test" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="name" expression="methodName()" defaultValue="returnsOkIfX" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="mock" value="org.mockito.Mockito.mock($parameterName$.class);" description="Check that var is not null" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="parameterName" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="COMPLETION" value="true" />
      <option name="JAVA_COMMENT" value="true" />
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>